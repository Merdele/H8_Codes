%% This script performs Inversion for H8 Data on MODIS LST Data
% The firstly the files are loaded and rearranged into N x 1 columns to
% allow for Inversion
% Inversion is then carried out
% Created by Denny on 13 Feb 2024. 

%% This section loads the files
clear
                
% add path for the create_aoi_coords function
addpath '/Users/denny/OneDrive - Nanyang Technological University/Y4/FYP/H8_Codes'

modis_data_folder = '/Users/denny/OneDrive - Nanyang Technological University/Y4/FYP/MODIS_Processed_Data';

volcano_name = 'Marapi';

month_folder_struct = (dir(fullfile(modis_data_folder,[volcano_name,'*'])));

cumulative_LST = [];

for i = 4:9%:length(month_folder_struct)-1

specific_month_folder = [modis_data_folder,'/',month_folder_struct(i).name];

cd(specific_month_folder)

day_folder_struct = (dir(fullfile(specific_month_folder,[volcano_name,'*'])));

for j = 1:length(day_folder_struct)

    specific_day_folder = [specific_month_folder,'/',day_folder_struct(j).name];

    cd(specific_day_folder)

    matfile_struct = (dir(fullfile(specific_day_folder,[volcano_name,'*'])));

    load([matfile_struct(1).name])

    MODIS_lat = lat;
    MODIS_lon = lon;

    clear('lat','lon')

    % hardcoded the indexes
    LST = LST(1:10,:);

    LST(LST == 0) = NaN;
    
    test = reshape(LST, [2, size(LST, 1)/2, size(LST, 2)]);

    average_LST = nanmean(test, 1);

    average_LST = squeeze(average_LST);

    resampled_LST = average_LST(:,1:5);

    resampled_LST_column = resampled_LST(:);

    nan_idx = find(resampled_LST_column == 0);

    resampled_LST_column(nan_idx) = [];

    cumulative_LST = [cumulative_LST;resampled_LST_column];

end

end

%%

modis_data_folder = '/Users/denny/OneDrive - Nanyang Technological University/Y4/FYP/LST_Inversion/MODIS';

volcano_name = 'Marapi';

modis_filename_struct = (dir(fullfile(modis_data_folder,[volcano_name,'*'])));

for i = 1:length(modis_filename_struct)

    

%% This step reads the himawari data

himawari_data_folder = '/Users/denny/OneDrive - Nanyang Technological University/Y4/FYP/LST_Inversion/Himawari';

cd (himawari_data_folder)

volcano_name = 'Marapi';

himawari_filename_struct = (dir(fullfile(himawari_data_folder,[volcano_name,'*'])));

cumulative_T_i = [];
cumulative_T_j = [];
cumulative_T_k = [];

for k = 1:length(himawari_filename_struct)

load(himawari_filename_struct(k).name)

fieldname = fieldnames(tbb_07);

    if length(fieldname) == 1

        T_i = tbb_13.(fieldname{1})(:);
    
        T_j = tbb_14.(fieldname{1})(:);
        
        T_k = tbb_15.(fieldname{1})(:);

    else
    
            tbb_13_a = tbb_13.(fieldname{1})(:);
            
            tbb_14_a = tbb_14.(fieldname{1})(:);
            
            tbb_15_a = tbb_15.(fieldname{1})(:);

            tbb_13_b = tbb_13.(fieldname{2})(:);
            
            tbb_14_b = tbb_14.(fieldname{2})(:);
            
            tbb_15_b = tbb_15.(fieldname{2})(:);

            T_i = (tbb_13_a + tbb_13_b) / 2;

            T_j = (tbb_14_a + tbb_14_b) / 2;

            T_k = (tbb_14_a + tbb_15_b) / 2;
   
    end

    cumulative_T_i = [cumulative_T_i;T_i];
    cumulative_T_j = [cumulative_T_j;T_j];
    cumulative_T_k = [cumulative_T_k;T_k];
    
end

%% This section cleans the data

% removes the indexes for all variables where NaN is for LST
nan_idx = isnan(cumulative_LST);

cumulative_LST(nan_idx) = [];
cumulative_T_i(nan_idx) = [];
cumulative_T_j(nan_idx) = [];
cumulative_T_k(nan_idx) = [];

% removes indexes for all variables where BT for Ti,j,k are below 240
less_than_variable = 240;
cumulative_T_i_lessthan240_idx = find(cumulative_T_i < less_than_variable);




%% This section performs the inversion

% Set up the design matrix X
X = [ones(length(cumulative_T_i),1), cumulative_T_i, cumulative_T_j, cumulative_T_k];

% Compute the least squares solution
mEst = (X' * X)' * X' * cumulative_LST;


%% K fold cross validation

% Assuming your data are stored in variables data1, data2, data3, and data4

% Concatenate the data into a single matrix
data = [cumulative_LST, cumulative_T_i, cumulative_T_j, cumulative_T_k];

R = corrplot(data,'varNames',{'LST','tbb13','tbb14','tbb15'});


